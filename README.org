#+OPTIONS: ^:nil tags:nil num:nil

* About

This is a very simple minor mode for formatting OpenSCAD code. Primarily, it:
 - aligns variable assignments,
 - removes multiple new lines before braces,
 - applies some regexp transformations,
 - reindents the buffer.

* Table of Contents                                       :TOC_2_gh:QUOTE:
#+BEGIN_QUOTE
- [[#about][About]]
- [[#requirements][Requirements]]
- [[#installation][Installation]]
  - [[#with-use-package-and-straightel][With use-package and straight.el]]
  - [[#manual-installation][Manual installation]]
- [[#usage][Usage]]
- [[#customization][Customization]]
#+END_QUOTE

* Requirements

| Name        | Version |
|-------------+---------|
| Emacs       | >= 29.1 |
| [[https://github.com/openscad/emacs-scad-mode][scad-mode]]   | >= 96.0 |



* Installation

Firstly, ensure that you have installed [[https://github.com/openscad/emacs-scad-mode][scad-mode]].

** With use-package and straight.el

#+begin_src elisp :eval no
(use-package scad-mode)

(use-package scad-prettify
  :straight (scad-prettify
             :repo "KarimAziev/scad-prettify"
             :type git
             :host github
             :flavor nil)
  :commands (scad-prettify-buffer)
  :hook (scad-mode . scad-prettify-mode))
#+end_src

** Manual installation

Download the source code and put it wherever you like, e.g. into =~/.emacs.d/scad-prettify/=

#+begin_src shell :eval no
git clone https://github.com/KarimAziev/scad-prettify.git ~/.emacs.d/scad-prettify/
#+end_src

Add the downloaded directory to the load path:

#+begin_src elisp :eval no
(add-to-list 'load-path "~/.emacs.d/scad-prettify/")
(require 'scad-prettify)
#+end_src

* Usage

- ~M-x scad-prettify-mode~: toggles a minor mode in the current buffer that automatically formats OpenSCAD code before saving.

- ~M-x scad-prettify-buffer~: Formats the entire buffer.

* Customization
- =scad-prettify-formatters=: Add or remove specific formatters.
- =scad-prettify-regexp-replacement-rules=: Customize rules for regexp-based formatting.
